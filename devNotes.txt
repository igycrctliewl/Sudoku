
7....234.
....9..5.
2...6....
.29.....7
...2.3...
1.....68.
....1...3
.6..3....
.754....9




7....234.....9..5.2...6.....29.....7...2.3...1.....68.....1...3.6..3.....754....9


Presented on FB as an advertisement.  Is it possible?  (Last line was obscured)
3.5.64.1979.51..8.2..3..7..57.4.9..6.4.276.38.6..5..4.63..2..7.15.847.62.........

Calculated solution was not valid.
Calculated solution on the left, solution figured by-hand on the right.
Four dot cells are ambiguous and could be either 1 or 5
385764219 - confirmed
794512283 - 794512683
211398754 - 216398754
572439126 - 573489126
941276538 - confirmed
862751947 - 862153947
638925471 - 63892.47.
159847362 - confirmed
487635921 - 42763.89.

Conclusion is that Solver should have figured out this solution
and therefore has bugs.

row[1] has two 2 and no 6
row[2] has two 1 and no 6
row[3] has two 2 and no 8
row[5] has two 7 and no 3
col[1] has two 8 and no 2
col[2] has two 1, two 2, no 3, and no 6
col[3] has two 7 and no 1
col[4] has two 3 and no 8
col[5] has two 5 and no 3
col[6] has two 2, two 9, no 6, and no 8
col[7] has two 2 and no 9
col[8] has two 1 and no 5
sec[0] has two 1 and no 6
sec[2] has two 2 and no 6
sec[3] has two 2 and no 3
sec[4] has two 7 and no 8
sec[7] has two 5 and no 1
sec[8] has two 1, two 2, no 5, and no 8

None of the original values were changed by the calculation, so it
would appear that solved values remain immutable.  Some values are simply
being solved incorrectly.

The incorrect result repeats each time, apparently ruling out random
chance due to interleaving, etc.

This is not an "X" puzzle, but diagonal groups were not derived by the 
initializer.  I don't believe this was a factor in the bug.


!!! findSingle is only counting unsolved cells.
If a value has been solved, yet not removed from all other cells,
that value may become single to another cells, resulting in duplicate solvation. (not a word)

play time!

Expert level online puzzle
4..5...9..1....8.7....9.........46.2132......7...........9...35....7....34..5.2.6



New Solver method: patternMatcher
Consider the following Group of cells:
[possibly [1, 3], solved: 9, possibly [1, 3], solved: 8, possibly [2, 4, 5, 6], solved: 7, possibly [1, 3, 4, 5], possibly [2, 4, 5, 6], possibly [1, 3, 4]]
The following patters occur:
2 - 1,3
2 - 2,4,5,6
1 - 1,3,4,5
1 - 1,3,4

The pattern 1,3 occurs twice, meaning those two cells must be 1 & 3; no other cell can be 1 or 3.  The possibles 1 and 3 can be removed from cells 4, 6, 7, and 8.
This solves cell 8 (4) which leads to solving cell 6 (5)

Algorithm: identify the unique patters and count the number of occurences of each pattern.
Any pattern which occurs a number of times equal to the pattern's length can be removed from all other cells containing that pattern.

------------------------------------------------------------------------------------------------------

Mom solved after the program gave up here.
1.84....69368125472.46...18895.246.1742.61.8.361.8....51..468.248325716962.1.8...

Sector 4
. 2 4
. 6 1
. 8 .
The bottom row cannot contain a 3 because of the 3 in sector 3.  This means one of the cells in column 3 must be 3.
This means board cell [6,3] is not 3 and [8,4] must be 3

At one point, I come to a sector that looks like this:
6		7		1
?39?	8		?35?
?24?	?25?	?45?

While the bottom three cells have three different patters, they also belong to the common pattern 245.
This means that cell 5 cannot be 3 and must be 5, cell 3 is 3, etc.

What do we have?  23459
                  00000 nonsense
						00001 single
						00010 single
						00011
						00100 single
						00101
						00110
						00111
						01000 single
						01001
						01010
						01011
						01100
						01101
						01110
						01111
                  10000 single
						10001
						10010
						10011
						10100
						10101
 common pattern   10110
						10111
						11000
						11001
						11010
						11011
						11100
						11101
						11110
						11111

32 possible patterns, six are rejected, 26 patterns to test

------------------------------------------------------------------------------------------------------

